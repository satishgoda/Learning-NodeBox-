<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="21" type="file" uuid="1501b38c-798f-4535-8e45-c58bb9eafead">
    <property name="canvasHeight" value="1000"/>
    <property name="canvasWidth" value="1000"/>
    <property name="canvasX" value="0"/>
    <property name="canvasY" value="0"/>
    <node name="root" prototype="core.network" renderedChild="shapes_net">
        <node name="count_points" position="2.00,-2.00" prototype="list.count"/>
        <node name="grid1" position="1.00,-4.00" prototype="corevector.grid">
            <port name="width" type="float" value="600.0"/>
            <port name="height" type="float" value="600.0"/>
        </node>
        <node name="numLessThan" position="3.00,1.00" prototype="math.compare">
            <port name="value2" type="float" value="35.0"/>
            <port name="comparator" type="string" value="&gt;"/>
        </node>
        <node name="rand_nums" position="2.00,-1.00" prototype="math.random_numbers">
            <port name="start" type="float" value="10.0"/>
            <port name="end" type="float" value="50.0"/>
        </node>
        <node name="round1" position="3.00,2.00" prototype="math.round"/>
        <node name="shapes_net" position="1.00,4.00" prototype="core.network" renderedChild="translate1">
            <node name="colorize1" position="1.00,4.00" prototype="corevector.colorize">
                <port name="fill" type="color" value="#d26b27ff"/>
                <port name="strokeWidth" type="float" value="2.0"/>
            </node>
            <node name="colorize2" position="4.00,4.00" prototype="corevector.colorize">
                <port name="fill" type="color" value="#4e9df4ff"/>
                <port name="strokeWidth" type="float" value="2.0"/>
            </node>
            <node name="ellipse1" prototype="corevector.ellipse">
                <port name="width" type="float" value="50.0"/>
                <port name="height" type="float" value="50.0"/>
            </node>
            <node name="rect2" position="1.00,2.00" prototype="corevector.rect">
                <port name="width" type="float" value="40.0"/>
                <port name="height" type="float" value="40.0"/>
            </node>
            <node name="size" position="3.00,0.00" prototype="math.number">
                <port name="value" type="float" value="100.0"/>
            </node>
            <node name="switch1" position="3.00,6.00" prototype="list.switch"/>
            <node name="translate1" position="3.00,7.00" prototype="corevector.translate"/>
            <port childReference="translate1.translate" description="" label="" name="position" range="value" type="point" value="0.00,0.00" widget="point"/>
            <port childReference="size.value" description="" label="" name="size" range="value" type="float" value="100.0" widget="float"/>
            <port childReference="switch1.index" description="" label="" name="index" range="value" type="int" value="0" widget="int"/>
            <port childReference="colorize1.strokeWidth" description="The new stroke width. Set to 0 for no stroke." label="" min="0.10000000149011612" name="strokeWidthBox" range="value" type="float" value="2.0" widget="float"/>
            <port childReference="colorize2.strokeWidth" description="The new stroke width. Set to 0 for no stroke." label="" min="0.10000000149011612" name="strokeWidthCircle" range="value" type="float" value="2.0" widget="float"/>
            <conn input="translate1.shape" output="switch1"/>
            <conn input="rect2.width" output="size"/>
            <conn input="rect2.height" output="size"/>
            <conn input="ellipse1.width" output="size"/>
            <conn input="ellipse1.height" output="size"/>
            <conn input="colorize1.shape" output="rect2"/>
            <conn input="colorize2.shape" output="ellipse1"/>
            <conn input="switch1.input2" output="colorize2"/>
            <conn input="switch1.input1" output="colorize1"/>
        </node>
        <conn input="shapes_net.index" output="round1"/>
        <conn input="shapes_net.position" output="grid1"/>
        <conn input="shapes_net.size" output="rand_nums"/>
        <conn input="count_points.list" output="grid1"/>
        <conn input="rand_nums.amount" output="count_points"/>
        <conn input="round1.value" output="numLessThan"/>
        <conn input="numLessThan.value1" output="rand_nums"/>
    </node>
</ndbx>
